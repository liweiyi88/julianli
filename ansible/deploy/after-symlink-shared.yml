---
- name: Install composer dependencies
  environment:
    APP_ENV: "prod"
    BUGSNAG_API_KEY: ""
    ALGOLIA_APP_ID: "..."
    ALGOLIA_API_KEY: "..."
    ENQUEUE_DSN: "{{ sqs_dsn }}"
  composer:
    command: install
    working_dir: "{{ ansistrano_release_path.stdout }}"

- name: Clear the cache
  environment:
    APP_ENV: "prod"
    BUGSNAG_API_KEY: ""
    ALGOLIA_APP_ID: "..."
    ALGOLIA_API_KEY: "..."
    ENQUEUE_DSN: "{{ sqs_dsn }}"
  command: "{{ release_console_path }} cache:clear"

- name: Warm up the cache
  environment:
    APP_ENV: "prod"
    BUGSNAG_API_KEY: ""
    ALGOLIA_APP_ID: "..."
    ALGOLIA_API_KEY: "..."
    ENQUEUE_DSN: "{{ sqs_dsn }}"
  command: "{{ release_console_path }} cache:warmup"

- name: Setup directory permissions for var/
  file:
    path: "{{ release_var_path }}"
    state: directory
    mode: 0777
    recurse: true

- name: Create DB if not exists
  environment:
      APP_ENV: "prod"
      BUGSNAG_API_KEY: ""
      ALGOLIA_APP_ID: "..."
      ALGOLIA_API_KEY: "..."
      DATABASE_URL: "{{ database_url }}"
      ENQUEUE_DSN: "{{ sqs_dsn }}"
  command: "{{ release_console_path }} doctrine:database:create --if-not-exists --env=prod"
  register: create_db_output
  changed_when: not create_db_output.stdout is search("already exists. Skipped")

- name: Run migrations
  environment:
    APP_ENV: "prod"
    BUGSNAG_API_KEY: ""
    ALGOLIA_APP_ID: "..."
    ALGOLIA_API_KEY: "..."
    DATABASE_URL: "{{ database_url }}"
    ENQUEUE_DSN: "{{ sqs_dsn }}"
  command: "{{ release_console_path }} doctrine:migrations:migrate --no-interaction --env=prod"
  register: run_migrations_output
  changed_when: not run_migrations_output.stdout is search('No migrations to execute')
