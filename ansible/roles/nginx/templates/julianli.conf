server {
    server_name {{ server_name }};
    root {{ server_document_root }};

    location / {
         # try to serve file directly, fallback to app.php
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass unix:/var/run/php/php7.1-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
         # When you are using symlinks to link the document root to the
         # current version of your application, you should pass the real
         # application path instead of the path to the symlink to PHP
         # FPM.
         # Otherwise, PHP's OPcache may not properly detect changes to
         # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
         # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param APP_ENV "prod";
        fastcgi_param DATABASE_URL "{{ database_url }}";
        fastcgi_param MAILER_URL "{{ mailer_url }}";
        fastcgi_param MAILER_HOST_EMAIL "{{ mailer_host_email }}";
        fastcgi_param MAILER_ADMIN_EMAIL "{{ vault_mailer_admin_email }}";
        fastcgi_param AWS_S3_KEY "{{ aws_s3_key }}";
        fastcgi_param AWS_S3_SECRET "{{ aws_s3_secret }}";
        fastcgi_param AWS_S3_REGION "{{ aws_s3_region }}";
        fastcgi_param REDIS_CONNECTION "{{ redis_connection }}";

        internal;
    }

    location ~ \.php$ {
            return 404;
    }

    error_log /var/log/nginx/{{ server_name }}_error.log;
    access_log /var/log/nginx/{{ server_name }}_access.log;
}

server {
    server_name  www.{{ server_name }};
    return       301 $scheme://{{ server_name }}$request_uri;
}